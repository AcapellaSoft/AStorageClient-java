group = 'ru.acapella'
version = "1.0"

defaultTasks 'clean', 'build'

apply plugin: 'java'
apply plugin: 'idea'

compileJava {
    // Flags only works when forking and passing 'javac' as an executable
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << '-Xdoclint:none'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(':common')

    compile group: 'io.aeron', name: 'aeron-all', version: '1.3.0'
    compile group: 'org.agrona', name: 'agrona', version: '0.9.6'

    compile group: 'io.protostuff', name: 'protostuff-core', version: '1.5.4'
    compile group: 'io.protostuff', name: 'protostuff-runtime', version: '1.5.4'

    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.15'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '0.15'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.+'

    testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['res']
        }
    }

    test {
        java {
            srcDirs = ['tests']
        }
        resources {
            srcDirs = ['res', 'res-test']
        }
    }
}

jar {
    baseName = project.getProperty('name')
    manifest {
        attributes 'Implementation-Title': 'Acapella Key Value Database Aeron API'
        attributes 'Implementation-Version': version
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}



